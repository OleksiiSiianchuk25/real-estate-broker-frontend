// src/components/Navbar.tsx
import React, { useState, useEffect } from "react";
import {
  AppBar,
  Toolbar,
  Typography,
  Button,
  CircularProgress,
  Menu,
  MenuItem,
} from "@mui/material";
import { Link, useNavigate } from "react-router-dom";
import api from "../utils/api";

const Navbar: React.FC = () => {
  const navigate = useNavigate();
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [role, setRole] = useState<string>("");
  const [loadingProfile, setLoadingProfile] = useState(true);
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);

  useEffect(() => {
    const token = localStorage.getItem("accessToken");
    setIsAuthenticated(!!token);

    if (token) {
      api
        .get("/users/profile")
        .then((res) => {
          setRole(res.data.role);
        })
        .catch((err) => {
          console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å —É Navbar:", err);
          setRole("");
        })
        .finally(() => {
          setLoadingProfile(false);
        });
    } else {
      setLoadingProfile(false);
    }
  }, []);

  const handleLogout = async () => {
    try {
      await api.post("/auth/logout");
    } catch (e) {
      console.error(e);
    }
    localStorage.removeItem("accessToken");
    setIsAuthenticated(false);
    setRole("");
    navigate("/login");
  };

  const openAdminMenu = (e: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(e.currentTarget);
  };
  const closeAdminMenu = () => {
    setAnchorEl(null);
  };

  const isAdmin = role === "ADMIN";

  return (
    <AppBar position="static">
      <Toolbar>
        {/* –õ–æ–≥–æ—Ç–∏–ø –≤–µ–¥–µ –Ω–∞ –∫–∞—Ä—Ç—É */}
        <Typography variant="h6" sx={{ flexGrow: 1 }}>
          <Link to="/" style={{ textDecoration: "none", color: "white" }}>
            üè° Real Estate Broker
          </Link>
        </Typography>

        {/* –ì–æ–ª–æ–≤–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ */}
        <Button color="inherit" component={Link} to="/listings">
          –û–≥–æ–ª–æ—à–µ–Ω–Ω—è
        </Button>

        {/* –Ø–∫—â–æ —â–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø—ñ–Ω–µ—Ä */}
        {loadingProfile && (
          <CircularProgress color="inherit" size={24} sx={{ ml: 2 }} />
        )}

        {/* –ê–¥–º—ñ–Ω-–º–µ–Ω—é */}
        {isAuthenticated && isAdmin && !loadingProfile && (
          <>
            <Button color="inherit" onClick={openAdminMenu}>
              –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
            </Button>
            <Menu
              anchorEl={anchorEl}
              open={Boolean(anchorEl)}
              onClose={closeAdminMenu}
            >
              <MenuItem
                component={Link}
                to="/admin/users"
                onClick={closeAdminMenu}
              >
                –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
              </MenuItem>
              <MenuItem
                component={Link}
                to="/admin/roles"
                onClick={closeAdminMenu}
              >
                –†–æ–ª—ñ
              </MenuItem>
              <MenuItem
                component={Link}
                to="/admin/categories"
                onClick={closeAdminMenu}
              >
                –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó
              </MenuItem>
              <MenuItem
                component={Link}
                to="/admin/properties"
                onClick={closeAdminMenu}
              >
                –û–≥–æ–ª–æ—à–µ–Ω–Ω—è
              </MenuItem>
              <MenuItem
                component={Link}
                to="/admin/pois"
                onClick={closeAdminMenu}
              >
                POI
              </MenuItem>
              <MenuItem
                component={Link}
                to="/admin/favorites"
                onClick={closeAdminMenu}
              >
                –ó–∞–∫–ª–∞–¥–∫–∏
              </MenuItem>
              <MenuItem
                component={Link}
                to="/admin/stats"
                onClick={closeAdminMenu}
              >
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              </MenuItem>
            </Menu>
          </>
        )}

        {/* –ü—É–Ω–∫—Ç–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ / –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ */}
        {isAuthenticated ? (
          <>
            <Button
              color="inherit"
              component={Link}
              to="/favorites"
              sx={{ ml: 1 }}
            >
              –£–ª—é–±–ª–µ–Ω—ñ
            </Button>
            <Button color="inherit" component={Link} to="/profile">
              –ö–∞–±—ñ–Ω–µ—Ç
            </Button>
            <Button color="inherit" onClick={handleLogout}>
              –í–∏–π—Ç–∏
            </Button>
          </>
        ) : (
          <>
            <Button color="inherit" component={Link} to="/login">
              –£–≤—ñ–π—Ç–∏
            </Button>
            <Button color="inherit" component={Link} to="/register">
              –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
            </Button>
          </>
        )}
      </Toolbar>
    </AppBar>
  );
};

export default Navbar;
